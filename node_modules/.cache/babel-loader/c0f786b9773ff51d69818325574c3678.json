{"ast":null,"code":"import _toConsumableArray from \"/home/lanes/Documents/lanesgabriel.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"/home/lanes/Documents/lanesgabriel.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _createForOfIteratorHelper from \"/home/lanes/Documents/lanesgabriel.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/home/lanes/Documents/lanesgabriel.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(editor);\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useRef, useEffect, memo } from 'react';\nfunction type(_x) {\n  return _type.apply(this, arguments);\n}\nfunction _type() {\n  _type = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(node) {\n    var _len,\n      args,\n      _key,\n      _i,\n      _args5,\n      arg,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          for (_len = _args6.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = _args6[_key];\n          }\n          _i = 0, _args5 = args;\n        case 2:\n          if (!(_i < _args5.length)) {\n            _context5.next = 21;\n            break;\n          }\n          arg = _args5[_i];\n          _context5.t0 = typeof arg;\n          _context5.next = _context5.t0 === 'string' ? 7 : _context5.t0 === 'number' ? 10 : _context5.t0 === 'function' ? 13 : 16;\n          break;\n        case 7:\n          _context5.next = 9;\n          return edit(node, arg);\n        case 9:\n          return _context5.abrupt(\"break\", 18);\n        case 10:\n          _context5.next = 12;\n          return wait(arg);\n        case 12:\n          return _context5.abrupt(\"break\", 18);\n        case 13:\n          _context5.next = 15;\n          return arg.apply(void 0, [node].concat(args));\n        case 15:\n          return _context5.abrupt(\"break\", 18);\n        case 16:\n          _context5.next = 18;\n          return arg;\n        case 18:\n          _i++;\n          _context5.next = 2;\n          break;\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee3);\n  }));\n  return _type.apply(this, arguments);\n}\nfunction edit(_x2, _x3) {\n  return _edit.apply(this, arguments);\n}\nfunction _edit() {\n  _edit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(node, text) {\n    var overlap;\n    return _regeneratorRuntime().wrap(function _callee4$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          overlap = getOverlap(node.textContent, text);\n          _context6.next = 3;\n          return perform(node, [].concat(_toConsumableArray(deleter(node.textContent, overlap)), _toConsumableArray(writer(text, overlap))));\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee4);\n  }));\n  return _edit.apply(this, arguments);\n}\nfunction wait(_x4) {\n  return _wait.apply(this, arguments);\n}\nfunction _wait() {\n  _wait = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(ms) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return new Promise(function (resolve) {\n            return setTimeout(resolve, ms);\n          });\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee5);\n  }));\n  return _wait.apply(this, arguments);\n}\nfunction perform(_x5, _x6) {\n  return _perform.apply(this, arguments);\n}\nfunction _perform() {\n  _perform = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(node, edits) {\n    var speed,\n      _iterator2,\n      _step2,\n      op,\n      _args9 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          speed = _args9.length > 2 && _args9[2] !== undefined ? _args9[2] : 60;\n          _iterator2 = _createForOfIteratorHelper(editor(edits));\n          _context8.prev = 2;\n          _iterator2.s();\n        case 4:\n          if ((_step2 = _iterator2.n()).done) {\n            _context8.next = 11;\n            break;\n          }\n          op = _step2.value;\n          op(node);\n          _context8.next = 9;\n          return wait(speed + speed * (Math.random() - 0.5));\n        case 9:\n          _context8.next = 4;\n          break;\n        case 11:\n          _context8.next = 16;\n          break;\n        case 13:\n          _context8.prev = 13;\n          _context8.t0 = _context8[\"catch\"](2);\n          _iterator2.e(_context8.t0);\n        case 16:\n          _context8.prev = 16;\n          _iterator2.f();\n          return _context8.finish(16);\n        case 19:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee6, null, [[2, 13, 16, 19]]);\n  }));\n  return _perform.apply(this, arguments);\n}\nfunction editor(edits) {\n  var _iterator, _step, _loop;\n  return _regeneratorRuntime().wrap(function editor$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _iterator = _createForOfIteratorHelper(edits);\n        _context2.prev = 1;\n        _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n          var edit;\n          return _regeneratorRuntime().wrap(function _loop$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                edit = _step.value;\n                _context.next = 3;\n                return function (node) {\n                  return requestAnimationFrame(function () {\n                    return node.textContent = edit;\n                  });\n                };\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _loop);\n        });\n        _iterator.s();\n      case 4:\n        if ((_step = _iterator.n()).done) {\n          _context2.next = 8;\n          break;\n        }\n        return _context2.delegateYield(_loop(), \"t0\", 6);\n      case 6:\n        _context2.next = 4;\n        break;\n      case 8:\n        _context2.next = 13;\n        break;\n      case 10:\n        _context2.prev = 10;\n        _context2.t1 = _context2[\"catch\"](1);\n        _iterator.e(_context2.t1);\n      case 13:\n        _context2.prev = 13;\n        _iterator.f();\n        return _context2.finish(13);\n      case 16:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _marked, null, [[1, 10, 13, 16]]);\n}\nfunction writer(_ref2) {\n  var _ref3 = _toArray(_ref2),\n    text = _ref3.slice(0);\n  var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var endIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text.length;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(startIndex < endIndex)) {\n            _context3.next = 5;\n            break;\n          }\n          _context3.next = 3;\n          return text.slice(0, ++startIndex).join('');\n        case 3:\n          _context3.next = 0;\n          break;\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee);\n  })();\n}\nfunction deleter(_ref4) {\n  var _ref5 = _toArray(_ref4),\n    text = _ref5.slice(0);\n  var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var endIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text.length;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(endIndex > startIndex)) {\n            _context4.next = 5;\n            break;\n          }\n          _context4.next = 3;\n          return text.slice(0, --endIndex).join('');\n        case 3:\n          _context4.next = 0;\n          break;\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee2);\n  })();\n}\nfunction getOverlap(start, _ref6) {\n  var _ref7 = _toArray(_ref6),\n    end = _ref7.slice(0);\n  return [].concat(_toConsumableArray(start), [NaN]).findIndex(function (char, i) {\n    return end[i] !== char;\n  });\n}\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css = \".styles_typicalWrapper__1_Uvh::after {\\n  content: \\\"|\\\";\\n  animation: styles_blink__2CKyC 1s infinite step-start;\\n}\\n\\n@keyframes styles_blink__2CKyC {\\n  50% { opacity: 0; }\\n}\";\nvar styles = {\n  \"typicalWrapper\": \"styles_typicalWrapper__1_Uvh\",\n  \"blink\": \"styles_blink__2CKyC\"\n};\nstyleInject(css);\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\nvar Typical = function Typical(_ref) {\n  var steps = _ref.steps,\n    loop = _ref.loop,\n    className = _ref.className,\n    _ref$wrapper = _ref.wrapper,\n    wrapper = _ref$wrapper === undefined ? \"p\" : _ref$wrapper;\n  var typicalRef = useRef(null);\n  var Component = wrapper;\n  var classNames = [styles.typicalWrapper];\n  if (className) {\n    classNames.unshift(className);\n  }\n  useEffect(function () {\n    if (loop === Infinity) {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(steps), [type]));\n    } else if (typeof loop === \"number\") {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(Array(loop).fill(steps).flat())));\n    } else {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(steps)));\n    }\n  });\n  return React.createElement(Component, {\n    ref: typicalRef,\n    className: classNames.join(' ')\n  });\n};\nvar index = memo(Typical);\nexport default index;","map":{"version":3,"sources":["../node_modules/@camwiegert/typical/typical.js","../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"names":["Typical","steps","loop","className","wrapper","typicalRef","useRef","Component","classNames","styles","typicalWrapper","unshift","Infinity","current","loopedType","Array","fill","flat","join","memo"],"mappings":"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","sourcesContent":["export async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) => requestAnimationFrame(() => node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex < endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex > startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\nimport React, { useRef, useEffect, memo } from \"react\";\nimport { type, type as loopedType } from \"@camwiegert/typical\";\n\nimport styles from './styles.css'\n\nconst Typical = ({ steps, loop, className, wrapper = \"p\" }) => {\n  const typicalRef = useRef(null);\n  const Component = wrapper;\n  const classNames = [styles.typicalWrapper];\n  \n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(() => {\n    if (loop === Infinity) {\n      type(typicalRef.current, ...steps, loopedType);\n    } else if (typeof loop === \"number\") {\n      type(\n        typicalRef.current,\n        ...Array(loop)\n          .fill(steps)\n          .flat()\n      );\n    } else {\n      type(typicalRef.current, ...steps);\n    }\n  });\n\n  return <Component ref={typicalRef} className={classNames.join(' ')}/>;\n}\n\nexport default memo(Typical)\n"]},"metadata":{},"sourceType":"module"}